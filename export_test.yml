---
- name: Export Workflow
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    export_base_dir: "aap_migration_backups/"
  collections:
    - ansible.controller
  tasks:
    - set_fact:
        export_dir: "{{ export_base_dir }}{{ ansible_date_time.date }}"
    - name: Configure Git credential storage
      command: "git config --global credential.helper store"
    - name: Git config username
      command: "git config --global user.name {{ git_name }}"
    - name: git config email
      command: "git config --global user.email {{ git_email }}"
    - name: Populate the Git credential store
      copy:
        src: "{{ lookup('env','GITHUB_CRED_FILE') }}"
        dest: /home/runner/.git-credentials
      no_log: True
    - name: "Git: is it up-to-date?"
      git:
        repo: "{{ gh_repo }}"
        dest: "./{{ export_base_dir }}"
        update: yes
        version: master
      register: git
      ignore_errors: True
    - debug:
        var: git
    - name: Create dir
      file:
        path: "{{ export_base_dir }}{{ ansible_date_time.date }}"
        state: directory
    - name: Export Projects
      ansible.controller.export:
        projects: all
      register: export_projects
    - name: Export projects
      copy:
        content: "{{ export_projects.assets|aap1toaap2  | to_nice_yaml() }}"
        dest: "{{ export_dir }}/projects.yml"
    - name: Export users
      ansible.controller.export:
        users: all
      register: export_users
    - name: Export users
      copy:
        content: "{{ export_users.assets | aap1toaap2 | to_nice_yaml() }}"
        dest: "{{ export_dir }}/users.yml"

    - name: Export teams
      ansible.controller.export:
        teams: all
      register: export_teams
    - name: Export teams
      copy:
        content: "{{ export_teams.assets | aap1toaap2 | to_nice_yaml() }}"
        dest: "{{ export_dir }}/teams.yml"

    - name: Export orgs
      ansible.controller.export:
        organizations: all
      register: export_orgs
    - name: Export orgs
      copy:
        content: "{{ export_orgs.assets | aap1toaap2 | to_nice_yaml() }}"
        dest: "{{ export_dir }}/orgs.yml"

    - name: Export inventory
      ansible.controller.export:
        inventory: all
      register: export_inventory
    - name: Export inventory
      copy:
        content: "{{ export_inventory.assets | aap1toaap2 |to_nice_yaml() }}"
        dest: "{{ export_dir }}/inventory.yml"

    - name: Export job templates
      ansible.controller.export:
        job_templates: all
      register: export_job_templates
    - name: Export workflow job template to file
      copy:
        content: "{{ export_job_templates.assets | aap1toaap2 | to_nice_yaml() }}"
        dest: "{{ export_dir }}/job_templates.yml"

    - name: Export workflow templates
      ansible.controller.export:
        workflow_job_templates: all
      register: export_workflow_templates
    - name: Export workflow job template to file
      copy:
        content: "{{ export_workflow_templates.assets | aap1toaap2 |to_nice_yaml() }}"
        dest: "{{ export_dir }}/workflow_templates.yml"

    - name: Validate yaml using pyyaml
      debug:
        msg: "add logic here"
    - name: Check if local changes exist in git
      shell: git status
      args:
        chdir: "./{{ export_base_dir }}"
      register: git_status
    - debug:
        var: git_status
    - name: Git rm latest file
      file:
        path: "./{{ export_base_dir }}latest"
        state: absent
    - name: Create latest that symlinks to the this run
      ansible.builtin.file:
        src: "{{ ansible_date_time.date }}"
        dest: "{{ export_base_dir }}latest"
        state: link
    - name: Git add latest file
      shell: "git add latest"
      args:
        chdir: "./{{ export_base_dir }}"
      register: gitadd_latest
    - debug:
        var: gitadd_latest
    - name: Git - Adding
      shell: "git add *"
      args:
        chdir: "./{{ export_base_dir }}"
      register: gitadd
      when: '"untracked files present" in git_status.stdout or "Changes not staged for commit" in git_status.stdout'
    - debug:
        var: gitadd
    - name: Git - commiting
      shell: git commit -m "Ansible migration Backup {{ export_dir }}"
      args:
        chdir: "./{{ export_base_dir }}"
      register: gitcommit
      when: '"untracked files present" in git_status.stdout or "Changes not staged for commit" in git_status.stdout'
    - debug:
        var: gitcommit.stdout
    - name: Git - push
      shell: git push
      args:
        chdir: "./{{ export_base_dir }}"
      register: gitpush
      when: '"untracked files present" in git_status.stdout or "Changes not staged for commit" in git_status.stdout'
    - debug:
        var: gitpush
~                         
